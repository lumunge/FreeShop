{"version":3,"sources":["Components/Product/ProductStyles.ts","Components/Product/Product.tsx","Components/CartItem/CartItemStyles.ts","Components/CartItem/CartItem.tsx","Components/Cart/CartStyles.ts","Components/Cart/Cart.tsx","AppStyles.ts","App.tsx","index.tsx"],"names":["makeStyles","paper","padding","cartBtn","position","right","top","button","float","bottom","color","fontSize","background","ProductWrapper","display","ProductDetails","ProductImg","width","height","Product","product","addToCart","classes","useStyles","Paper","elevation","className","src","image","alt","title","Typography","variant","price","id","Button","onClick","CartItemWrapper","styled","div","CartItem","item","removeFromCart","totalAmount","toFixed","CartHeader","textAlign","paddingTop","Price","Cart","items","cartItems","Container","length","map","reduce","acc","App","useState","setCartItems","cartOpen","setCartOpen","fetchProducts","a","fetch","json","useQuery","data","isLoading","error","clicked","prevItems","find","Drawer","anchor","open","onClose","Badge","badgeContent","Grid","container","spacing","xs","md","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.95508d71.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n\tpaper:{\n\t\tpadding: \"1rem\"\n\t},\n\tcartBtn:{\n\t\tposition: \"absolute\",\n\t\tright: \"10px\",\n\t\ttop: \"20px\"\n\t},\n\tbutton:{\n\t\tposition: \"relative\",\n\t\tfloat: \"right\",\n\t\tbottom: \"40px\",\n\t\tright: \"40px\",\n\t\tcolor: \"#28ea89\",\n\t\tfontSize: \"1.2rem\",\n\t\tbackground: \"#2a2d3c\",\n\t\tpadding: \"10px 25px\",\n\t},\n\tProductWrapper:{\n\t\tdisplay: \"flex\"\n\t},\n\tProductDetails:{\n\t\tpadding: \"1rem\"\n\t},\n\tProductImg:{\n\t\twidth: \"200px\",\n\t\theight: \"200px\"\n\t}\n}))\n","// import types\nimport { cartItemType } from \"../../App\";\n// import cart icon\nimport { FaCartPlus } from \"react-icons/fa\";\nimport { Paper, Button, Typography } from \"@material-ui/core\";\nimport useStyles from './ProductStyles';\n\ntype Props = {\n\tproduct: cartItemType;\n\taddToCart: (clicked: cartItemType) => void;\n};\n\nconst Product: React.FC<Props> = ({ product, addToCart }) => {\n\n\tconst classes = useStyles();\n\n\n\treturn (\n\t\t<Paper elevation={4} className={classes.paper}>\n\t\t\t<div className={classes.ProductWrapper} key={product.id}>\n\t\t\t\t<div>\n\t\t\t\t\t<img className={classes.ProductImg} src={product.image} alt={product.title} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.ProductDetails}>\n\t\t\t\t\t<Typography variant=\"body1\">{product.title}</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography variant=\"body2\">Ksh {product.price}</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Button variant=\"contained\" className={classes.button} onClick={() => addToCart(product)}>\n\t\t\t\t<FaCartPlus />\n\t\t\t</Button>\n\t\t</Paper>\n\t);\n};\n\nexport default Product;\n\n","import styled from \"styled-components\";\n\nexport const CartItemWrapper = styled.div`\n\tpadding: 1rem;\n    border-bottom: 1px solid #333;\n    margin: 10px 0;\n\n\t.item-info {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t}\n\t.item-details span{\n\t\tcolor: #2ecc71;\n\t}\n\t.action-btns {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tmargin-top: 3rem;\n\t}\n\t.action-btns span {\n\t\tborder: 1px solid #2a2d3c;\n\t\tpadding: 5px 10px;\n\t}\n\t.action-btns span:hover {\n\t\tcursor: pointer;\n\t\tbackground: #2a2d3c;\n\t\tcolor: #fff;\n\t\ttransition: all .4s ease-in-out;\n\t}\n`;\n","import { cartItemType } from \"../../App\";\nimport { CartItemWrapper } from \"./CartItemStyles\";\n// icons\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\nimport { Typography } from \"@material-ui/core\";\n\ntype Props = {\n\titem: cartItemType;\n\taddToCart: (clicked: cartItemType) => void;\n\tremoveFromCart: (id: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n\t<CartItemWrapper>\n\t\t<Typography variant=\"h6\">{item.title}</Typography>\n\t\t<div className=\"item-info\">\n\t\t\t<div className=\"item-img\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={item.image}\n\t\t\t\t\talt={item.title}\n\t\t\t\t\twidth=\"100px\"\n\t\t\t\t\theight=\"100px\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"item-details\">\n\t\t\t\t<Typography variant=\"h6\">Price: <span>{item.price}</span></Typography>\n\t\t\t\t<Typography variant=\"h6\">Total: <span>{(item.totalAmount * item.price).toFixed(2)}</span></Typography>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"action-btns\">\n\t\t\t<span onClick={() => removeFromCart(item.id)}>\n\t\t\t\t<FaMinus />\n\t\t\t</span>\n\t\t\t<p>{item.totalAmount}</p>\n\t\t\t<span onClick={() => addToCart(item)}>\n\t\t\t\t<FaPlus />\n\t\t\t</span>\n\t\t</div>\n\t</CartItemWrapper>\n);\n\nexport default CartItem;\n","import {makeStyles} from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n\tCartHeader:{\n\t\ttextAlign: \"center\",\n    \tpaddingTop: \"2rem\",\n\t},\n\tPrice:{\n\t\tcolor: \"#2ecc71\"\n\t}\n}))","import { Container, Typography } from \"@material-ui/core\";\nimport { cartItemType } from \"../../App\";\nimport CartItem from \"../CartItem/CartItem\";\nimport useStyles from './CartStyles';\n\n\ntype Props = {\n\tcartItems: cartItemType[];\n\taddToCart: (clicked: cartItemType) => void;\n\tremoveFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n\n\tconst classes = useStyles();\n\n\t//calculating total price\n\tconst getTotals = (items: cartItemType[]) =>\n\t\titems.reduce(\n\t\t\t(acc: number, item) => acc + item.totalAmount * item.price,\n\t\t\t0\n\t\t);\n\n\treturn (\n\t\t<Container>\n\t\t\t<div className={classes.CartHeader}>\n\t\t\t\t{cartItems.length === 0 ? (\n\t\t\t\t\t<Typography variant=\"h4\">No Items In Cart</Typography>\n\t\t\t\t) : (\n\t\t\t\t\t<Typography variant=\"h4\">{cartItems.length} Item(s)</Typography>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{cartItems.map((item) => (\n\t\t\t\t<CartItem\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\titem={item}\n\t\t\t\t\taddToCart={addToCart}\n\t\t\t\t\tremoveFromCart={removeFromCart}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Typography variant=\"h5\">\n\t\t\t\tPayable Amount:{\" \"}\n\t\t\t\t<div className={classes.Price}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tKsh {getTotals(cartItems).toFixed(2)}\n\t\t\t\t</div>\n\t\t\t</Typography>\n\t\t</Container>\n\t);\n};\n\nexport default Cart;\n","import {makeStyles} from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n\tcartBtn:{\n\t\tposition: \"absolute\",\n\t\tright: \"10px\",\n\t\ttop: \"20px\"\n\t}\n}))\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n// components\nimport Product from \"./Components/Product/Product\";\nimport Cart from \"./Components/Cart/Cart\";\nimport { Badge, Drawer, Grid, Container, Button, Typography } from \"@material-ui/core\";\nimport ShoppingCart from \"@material-ui/icons/AddShoppingCart\";\n// styles\nimport useStyles from './AppStyles';\n\n//Setting product types\nexport type cartItemType = {\n\tid: number;\n\ttitle: string;\n\tprice: number;\n\tdescription: string;\n\timage: string;\n\ttotalAmount: number;\n};\n\nconst App = () => {\n\t// states\n\tconst [cartItems, setCartItems] = useState([] as cartItemType[]);\n\tconst [cartOpen, setCartOpen] = useState(false);\n\tconst classes = useStyles();\n\n\tconst fetchProducts = async (): Promise<cartItemType[]> =>\n\t\tawait (await fetch(\"https://fakestoreapi.com/products\")).json();\n\n\tconst { data, isLoading, error } = useQuery<cartItemType[]>(\n\t\t\"products\",\n\t\tfetchProducts\n\t);\n\n\t\n\t// adding items to Cart\n\tconst addToCart = (clicked: cartItemType) => {\n\t\tsetCartItems((prevItems) => {\n\t\t\t// check for item in cart\n\t\t\tconst isItemCart = prevItems.find((item) => item.id === clicked.id);\n\n\t\t\tif (isItemCart) {\n\t\t\t\treturn prevItems.map((item) =>\n\t\t\t\t\titem.id === clicked.id\n\t\t\t\t\t\t? { ...item, totalAmount: item.totalAmount + 1 }\n\t\t\t\t\t\t: item\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn [...prevItems, { ...clicked, totalAmount: 1 }];\n\t\t});\n\t};\n\n\n\t// removing items from cart\n\tconst removeFromCart = (id: number) => {\n\t\tsetCartItems((prevItems) =>\n\t\t\tprevItems.reduce((acc, item) => {\n\t\t\t\tif (item.id === id) {\n\t\t\t\t\tif (item.totalAmount === 1) return acc;\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t{ ...item, totalAmount: item.totalAmount - 1 },\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\treturn [...acc, item];\n\t\t\t\t}\n\t\t\t}, [] as cartItemType[])\n\t\t);\t\t\n\t};\n\n\tif (isLoading) return <Typography variant=\"h4\">Setting Up Shop...</Typography>;\n\tif (error) return <Typography variant=\"h4\" color=\"secondary\">Error while fetching items...</Typography>;\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Free Shop</h1>\n\t\t\t<div>\n\t\t\t\t<Drawer\n\t\t\t\t\tanchor=\"right\"\n\t\t\t\t\topen={cartOpen}\n\t\t\t\t\tonClose={() => setCartOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Cart\n\t\t\t\t\t\tcartItems={cartItems}\n\t\t\t\t\t\taddToCart={addToCart}\n\t\t\t\t\t\tremoveFromCart={removeFromCart}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => setCartOpen(true)} variant=\"contained\" className={classes.cartBtn}>\n\t\t\t\t\t\t<Badge badgeContent={cartItems.length}>\n\t\t\t\t\t\t\t<ShoppingCart />\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t{data?.map((product) => (\n\t\t\t\t\t\t<Grid item key={product.id} xs={12} md={6}>\n\t\t\t\t\t\t\t<Product product={product} addToCart={addToCart} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default App;\n","import {QueryClient, QueryClientProvider} from 'react-query';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}